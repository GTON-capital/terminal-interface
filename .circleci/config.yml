version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.1.0
  kubernetes: circleci/kubernetes@1.1.0
jobs:
  docker-image-build:
    docker:
      - image: cimg/base:2021.04
    parameters:
      container-tag:
        type: string
      prod-config:
        type: boolean
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: << parameters.prod-config >> || mv ./config/config-test.ts ./config/config.ts
      - run: docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWORD}
      - run: docker build -t << parameters.container-tag >> . && docker push << parameters.container-tag >>
  cluster-deploy:
    docker:
      - image: cimg/python:3.8
    parameters:
      deployment-name:
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: ${CLUSTER_NAME}
      - run: kubectl rollout restart deployment << parameters.deployment-name >> --namespace=${NAMESPACE}     
workflows:
  version: 2
  build-deploy:
    jobs:
      - docker-image-build:
          container-tag: ${CONTAINER_TAG}
          prod-config: false
      - cluster-deploy:
          deployment-name: ${DEPLOYMENT}
          requires: 
            - docker-image-build
    when:
      equal: [ develop, << pipeline.git.branch >> ]
  build-deploy-alpha:
    jobs:
      - docker-image-build:
          container-tag: ${CONTAINER_TAG_ALPHA}
          prod-config: true
      - cluster-deploy:
          deployment-name: ${DEPLOYMENT_ALPHA}
          requires: 
            - docker-image-build
    when:
      equal: [ alpha, << pipeline.git.branch >> ]
  build-deploy-production:
    jobs:
      - docker-image-build:
          container-tag: ${CONTAINER_TAG_PROD}
          prod-config: false
      - cluster-deploy:
          deployment-name: ${DEPLOYMENT_PROD}
          requires: 
            - docker-image-build
    when:
      equal: [ master, << pipeline.git.branch >> ]
